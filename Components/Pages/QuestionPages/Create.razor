@page "/questions/create"
@rendermode InteractiveServer
@using Microsoft.EntityFrameworkCore
@using EnglishQuizApp.Models
@using EnglishQuizApp.Data
@inject NavigationManager Navigation
@inject IDbContextFactory<EnglishQuizApp.Data.EnglishQuizAppContext> DbFactory

<h3>Create Question</h3>
<EditForm Model="NewQuestion" OnValidSubmit="SaveQuestion">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-3">
        <label>Question Text:</label>
        <InputText @bind-Value="NewQuestion.Text" class="form-control" />
    </div>
    <h4>Answer Options</h4>
    <div>
        @foreach (var option in NewQuestion.Options)
        {
            <p>@option.Text <button type="button" @onclick="() => RemoveOption(option)" class="btn btn-sm btn-danger">X</button></p>
        }
    </div>
    <div class="mb-3">
        <InputText @bind-Value="NewOptionText" class="form-control" placeholder="New Answer Option" />
        <button type="button" @onclick="AddOption" class="btn btn-sm btn-secondary mt-2">Add Option</button>
    </div>
    <div class="mt-3">
        <button type="submit" class="btn btn-primary">Save</button>
        <button type="button" @onclick="Cancel" class="btn btn-secondary">Cancel</button>
    </div>
</EditForm>

@code {
    private Question NewQuestion = new();
    private string NewOptionText = "";

    private void AddOption()
    {
        if (!string.IsNullOrWhiteSpace(NewOptionText))
        {
            NewQuestion.Options.Add(new AnswerOption { Text = NewOptionText });
            NewOptionText = "";
            StateHasChanged();
        }
    }

    private void RemoveOption(AnswerOption option)
    {
        NewQuestion.Options.Remove(option);
        StateHasChanged();
    }

    private async Task SaveQuestion()
    {
        using var context = await DbFactory.CreateDbContextAsync();
        context.Questions.Add(NewQuestion);
        await context.SaveChangesAsync();
        Navigation.NavigateTo("/questions");
    }

    private void Cancel() => Navigation.NavigateTo("/questions");
}